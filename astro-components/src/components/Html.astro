---
import type { AstroBuiltinAttributes } from 'astro'

import DevMode from './debug/DevMode.astro'

export type Props = {
  class?: string
  ['class:list']?: AstroBuiltinAttributes['class:list']
  devMode?: string
  lang?: string
  favicon?: string
  links?: Record<string, string>[]
  stylesheets?: string[]
  scripts?: string[]
}

const {
  class: className,
  ['class:list']: classList,
  devMode = import.meta.env.DEV,
  lang = 'en',
  favicon = '/favicon.svg',
  links = [],
  stylesheets = [],
  scripts = [],
} = Astro.props

const {
  BASE_URL,
  SITE,
} = import.meta.env

const baseUrl = SITE ? new URL(BASE_URL ?? '', SITE) : null
---

<!DOCTYPE html>
<html lang={lang}>
  <head>
    <meta charset="utf-8" />
    {baseUrl && <base href={baseUrl.toString()} />}
    {favicon && <link rel="icon" href={favicon} />}

    <slot name="head" />

    <slot name="links">
      {links.map(attrs => <link {...attrs} />)}
    </slot>

    <slot name="stylesheets">
      {stylesheets.map(href => <link rel="stylesheet" href={href} />)}
    </slot>

    <slot name="scripts">
      {scripts.map(src => <script src={src} is:inline />)}
    </slot>

    <noscript>
      <slot name="noscript" />
    </noscript>
  </head>

  <body class:list={[className, classList]}>
    {devMode && <DevMode />}

    <slot name="body">
      <slot />
    </slot>
  </body>
</html>

<style is:global>
  *,
  :before,
  :after {
    box-sizing: border-box;
  }
</style>
